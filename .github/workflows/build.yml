name: Build Debian Images
on:
  push:
  repository_dispatch:
    types: [build]
  workflow_dispatch:

env:
  NODE_OPTIONS: "--max_old_space_size=8048"

jobs:
  build_native:
    name: Build Package for amd64
    runs-on: ubuntu-latest
    outputs:
      filename: ${{steps.build.outputs.filename}}
      version: ${{steps.version.outputs.group1}}
    steps:
    - uses: actions/checkout@master
    - name: Install required dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev pkg-config libudev-dev libusb-1.0-0-dev
    - name: Build
      id: build
      run: |
        git clone "https://${{secrets.GH_ACCESS_TOKEN}}@github.com/makeproaudio/glue.git" && cd glue
        node setup.js
        cd packages/glue-ui && npm run build
        cd ../Glue && npm run build && node build-debian-package.js amd64
    - name: Determine version
      uses: actions-ecosystem/action-regex-match@v2
      id: version
      with:
        text: ${{steps.build.outputs.filename}}
        regex: '^glue_(.*)_.*\.deb$'
    - name: Store package as Artifact
      uses: actions/upload-artifact@v2
      with:
        path: glue/debian-packages/${{steps.build.outputs.filename}}
        name: glue-amd64
  build_qemu:
    name: Build Package for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [armhf]
    outputs:
      filename: ${{steps.build.outputs.filename}}
    steps:
    - uses: actions/checkout@master
    - name: Build
      uses: uraimo/run-on-arch-action@v2.1.1
      id: build
      with:
        arch: "${{ fromJSON('{\"armhf\": \"armv7\"}')[matrix.arch] }}"
        distro: ubuntu18.04
        env: |
          NODE_OPTIONS: --max_old_space_size=8048
        setup: |
          mkdir -p "${PWD}/artifacts"
        dockerRunArgs: |
          --volume "${PWD}/artifacts:/artifacts"
        install: |
          apt-get update && apt-get install -y curl git libasound2-dev pkg-config libudev-dev libusb-1.0-0-dev
          curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
          apt-get install -y nodejs
          npm install --global yarn
        githubToken: ${{ github.token }}
        run: |
          git clone "https://${{secrets.GH_ACCESS_TOKEN}}@github.com/makeproaudio/glue.git" && cd glue
          node setup.js
          cd packages/glue-ui && npm run build
          cd ../Glue && npm run build && node build-debian-package.js ${{ matrix.arch }}
    - name: Store package as Artifact
      uses: actions/upload-artifact@v2
      with:
        path: glue/debian-packages/${{steps.build.outputs.filename}}
        name: glue-${{matrix.arch}}
  publish_package:
    name: Publish to Aptly Repository
    runs-on: ubuntu-latest
    needs: [build_native, build_qemu]
    steps:
      - name: Install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: Install Aptly CLI
        run: gem install aptly_cli
      - name: Create Aptly CLI config file
        run: "echo \"---\n:proto: https\n:server: aptly.internal.makepro-x.com\n:port: 443\" > ./aptly-cli.conf"
      - name: Download Artifact (amd64)
        uses: actions/download-artifact@v2
        with:
          name: glue-amd64
      - name: Download Artifact (armhf)
        uses: actions/download-artifact@v2
        with:
          name: glue-armhf
      - name: Debug (List repositories)
        run: aptly-cli -c ./aptly-cli.conf --username ${{ secrets.APTLY_USERNAME }} --password ${{ secrets.APTLY_PASSWORD }} --debug repo_list
      - name: Upload package (amd64)
        run: aptly-cli -c ./aptly-cli.conf --username ${{ secrets.APTLY_USERNAME }} --password ${{ secrets.APTLY_PASSWORD }} file_upload --upload ${{needs.build_native.outputs.filename }} --directory /uploads
      - name: Upload package (armhf)
        run: aptly-cli -c ./aptly-cli.conf --username ${{ secrets.APTLY_USERNAME }} --password ${{ secrets.APTLY_PASSWORD }} file_upload --upload ${{needs.build_qemu.outputs.filename }} --directory /uploads
      - name: Add packages to repository
        run: aptly-cli -c ./aptly-cli.conf --username ${{ secrets.APTLY_USERNAME }} --password ${{ secrets.APTLY_PASSWORD }} repo_upload --forcereplace --name makepro-x --dir /uploads/
      - name: Create Snapshot
        run: aptly-cli -c ./aptly-cli.conf --username ${{ secrets.APTLY_USERNAME }} --password ${{ secrets.APTLY_PASSWORD }} snapshot_create --name snapshot-${{needs.build_native.outputs.version}} --repo makepro-x
      - name: Drop old published Repository
        continue-on-error: true
        run: "aptly-cli -c ./aptly-cli.conf --username ${{ secrets.APTLY_USERNAME }} --password ${{ secrets.APTLY_PASSWORD }} publish_drop --prefix s3:repo.makepro-x.com: --distribution debian"
      - name: Publish new Snapshot
        run: "aptly-cli -c ./aptly-cli.conf --username ${{ secrets.APTLY_USERNAME }} --password ${{ secrets.APTLY_PASSWORD }} publish_repo --sourcekind snapshot --name snapshot-${{needs.build_native.outputs.version}} --prefix s3:repo.makepro-x.com: --gpg_key ${{ secrets.APTLY_GPG_KEY }} --gpg_passphrase ${{ secrets.APTLY_GPG_PASSPHRASE }} --gpg_batch --forceoverwrite"
  trigger_pi_image_build:
    name: Trigger Pi Image Build
    runs-on: ubuntu-latest
    needs: [publish_package]
    steps:
    - name: Trigger Build
      uses: hrueger/dispatch-action@main
      with:
        token: ${{ secrets.GH_ACCESS_TOKEN }}
        owner: makeproaudio
        repo: glue-pi-os
        event_type: build
        forwardEventPayload: "false"
