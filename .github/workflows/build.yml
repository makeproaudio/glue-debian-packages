name: Build Debian Images
on: [workflow_dispatch]

env:
  NODE_OPTIONS: "--max_old_space_size=8048"

jobs:
  build_x64:
    name: Build Package for x64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Install Minio CLI
      run: wget https://dl.min.io/client/mc/release/linux-amd64/mc && chmod +x ./mc && ./mc alias set cdn https://cdn.makepro-x.com ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    - name: Install required dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libasound2-dev pkg-config libudev-dev libusb-1.0-0-dev
    - name: Build
      run: |
        git clone "https://${{secrets.GH_ACCESS_TOKEN}}@github.com/makeproaudio/glue.git" && cd glue && git checkout debian-packages
        yarn
        cd packages/Glue && node build-debian-package.js x64
    # - name: Upload .deb
    #   run: ./mc cp packages/Glue/${{steps.bundle.outputs.filename}} cdn/glue-deb-packages/${{steps.bundle.outputs.filename}}
  build_arm64_and_armv7:
    name: Build Package for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, armv7]
    steps:
    - uses: actions/checkout@master
    - name: build
      uses: uraimo/run-on-arch-action@v2.1.1
      id: emulator
      with:
        arch: ${{ matrix.arch }}
        distro: ubuntu18.04
        install: |
          apt-get update && apt-get install -y wget
          wget -O /home/runner/mc https://dl.min.io/client/mc/release/linux-amd64/mc && chmod +x /home/runner/mc && pwd && ls
        githubToken: ${{ github.token }}
        run: |
          pwd && ls
          /home/runner/mc alias set cdn https://cdn.makepro-x.com ${{ secrets.AWS_ACCESS_KEY_ID }} ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          git clone "https://${{secrets.GH_ACCESS_TOKEN}}@github.com/makeproaudio/glue.git" && cd glue && git checkout debian-packages
          yarn
          cd packages/Glue && node build-debian-package.js ${{ matrix.arch }}
    # - name: Upload .deb
    #   run: /home/runner/mc cp packages/Glue/${{steps.bundle.outputs.filename}} cdn/glue-deb-packages/${{steps.bundle.outputs.filename}}